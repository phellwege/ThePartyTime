{"version":3,"sources":["Toggle/DayNight_Mode.js","components/Head.js","components/Footer.js","views/Main.js","views/Rules.js","App.js","reportWebVitals.js","index.js"],"names":["DayNight_Mode","toggled","onClick","className","GlobalStyle","createGlobalStyle","props","theme","mode","Head","useState","setToggled","setTheme","id","s","Footer","href","Rules","App","Fragment","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAceA,EAVO,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC9B,OACI,mCACI,qBAAKA,QAASA,EAASC,UAAS,gBAAWF,EAAU,SAAW,IAAhE,SACI,qBAAKE,UAAU,eCAzBC,G,MAAcC,YAAH,gIAEW,SAAAC,GAAK,MACA,SAArBA,EAAMC,MAAMC,KAAkB,UAAY,aACzC,SAAAF,GAAK,MACW,SAArBA,EAAMC,MAAMC,KAAkB,UAAY,UAChC,SAAAF,GAAK,MACM,SAArBA,EAAMC,MAAMC,KAAkB,uBAAwB,2BAiC/CC,EA3BF,WACT,MAA8BC,oBAAS,GAAvC,mBAAOT,EAAP,KAAgBU,EAAhB,KACA,EAA0BD,mBAAS,CAACF,KAAM,UAA1C,mBAAOD,EAAP,KAAcK,EAAd,KAMA,OACI,eAAC,IAAD,CAAeL,MAAOA,EAAtB,UACA,cAACH,EAAD,IACA,sBAAKS,GAAG,YAAR,UACI,8BACI,wCAEJ,gCACI,4CACA,yCAEJ,sBAAKV,UAAU,OAAf,UACI,cAAC,EAAD,CAAQF,QAASA,EAASC,QAjBnB,WACfS,GAAW,SAACG,GAAD,OAAMA,KACjBF,EAAwB,SAAfL,EAAMC,KAAkB,CAACA,KAAM,SAAU,CAACA,KAAK,YAgBhD,4BAAmB,SAAfD,EAAMC,KAAkB,QAAU,kBCpBvCO,G,MAnBA,WACX,OACI,mCACA,yBAAQF,GAAG,YAAX,UACQ,sBAAKA,GAAG,eAAR,UACI,mBAAGG,KAAM,QAAT,kBACA,mBAAGA,KAAM,SAAT,mBACA,mBAAGA,KAAK,SAAR,mBACA,mBAAGA,KAAK,SAAR,sBAEJ,8BACI,mBAAGA,KAAK,sBAAR,0BCRL,aAEX,OACI,sBAAKH,GAAG,aAAR,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QC2BGI,EApCD,WAEV,OACI,qCACA,uCACA,wCACA,+BACI,6CACA,0DACA,sDACA,+DAEJ,uDACA,6DACA,kCACI,+BACI,qCACA,0CAEJ,+BACI,uCACA,0CAEJ,+BACI,2CACA,0CAEJ,+BACI,2CACA,iD,MCPDC,MAhBf,WACE,MAA0BR,mBAAS,CAACF,KAAM,UAA1C,mBAAOD,EAAP,KACA,OADA,KAEE,cAAC,IAAD,CAAeA,MAAOA,EAAtB,SACA,qBAAKJ,UAAU,MAAf,SACE,cAAC,IAAMgB,SAAP,UACI,eAAC,IAAD,WACE,cAAC,EAAD,CAAMC,KAAK,MACX,cAAC,EAAD,CAAOA,KAAK,qBCJTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.16183516.chunk.js","sourcesContent":["import React from 'react';\nimport \"./NightNDay.css\"\n\n\nconst DayNight_Mode = ({ toggled, onClick }) => {\n    return (\n        <>\n            <div onClick={onClick} className={`toggle${toggled ? ' night' : \"\"}`}>\n                <div className=\"notch\">\n                </div>\n            </div>\n        </>\n    )\n}\nexport default DayNight_Mode;","import React, { useEffect, useState } from 'react';\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport Toggle from '../Toggle/DayNight_Mode';\nimport '../Head.css';\n\n// the first set is dark mode the second is light mode\n// dark contrast color b1b1b3\n// light contrast color #111\nconst GlobalStyle = createGlobalStyle`\n    body {\n        background-color: ${props => \n            props.theme.mode === 'dark' ? '#2a2a2e' : '#eeeeee'};\n    color: ${props => \n        props.theme.mode === 'dark' ? '#b1b1b3' : '#111' };\n    transition: ${props => \n        props.theme.mode === 'dark' ? 'all 0.3s ease-in-out': 'all 0.5s ease-in-out'};\n    }\n\n    };\n`\n\nconst Head = () => {\n    const [toggled, setToggled] = useState(false);\n    const [theme, setTheme] = useState({mode: 'light'});\n    const handleClick =() => {\n        setToggled((s)=>!s);\n        setTheme(theme.mode === 'dark' ? {mode: 'light'}: {mode:'dark'});\n}\n\n    return (\n        <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <div id='headspace'>\n            <div>\n                <h1>icon</h1>\n            </div>\n            <div>\n                <h1>Party Time</h1>\n                <p>party</p>\n            </div>\n            <div className=\"Mode\">\n                <Toggle toggled={toggled} onClick={handleClick} />\n                <p>{theme.mode === 'dark' ? \"Night\" : \"Day\"}</p>\n            </div>\n        </div>\n        </ThemeProvider>\n    )\n}\nexport default Head;","import { Link } from '@reach/router';\nimport \"../Main.css\";\n\nconst Footer = () => {\n    return (\n        <>\n        <footer id=\"foot_wrap\">\n                <div id=\"footer_links\">\n                    <a href={\"#Home\"}>Home</a>\n                    <a href =\"#Stuff\">Stuff</a>\n                    <a href=\"#Stuff\">Stuff</a>\n                    <a href=\"#Stuff\">Stuff</a>\n                </div>\n                <div>\n                    <a href=\"https://github.com/\">\n                        Git\n                    </a>\n                </div>\n        </footer>\n        </>\n    )\n}\nexport default Footer;","import React from 'react';\nimport Head from '../components/Head'\nimport Footer from '../components/Footer'\nimport '../Main.css';\n\n\nexport default () => {\n\n    return (\n        <div id=\"background\">\n            <Head/>\n            <Footer/>\n        </div>\n    )\n}\n\n","\n\nconst Rules = () => {\n\n    return (\n        <>\n        <h1>Title</h1>\n        <h2>Basics</h2>\n        <ul>\n            <li>Controls - </li>\n            <li> Left arrow - moves Left</li>\n            <li> Up arrow - Selector</li>\n            <li> Right arrow - Moves right</li>\n        </ul>\n        <h4>...But what can I do?</h4>\n        <p>Depends on day vs night time</p>\n        <table>\n            <tr>\n                <th>Day</th>\n                <th>Night</th>\n            </tr>\n            <tr>\n                <td>Paint</td>\n                <td>Music</td>\n            </tr>\n            <tr>\n                <td>Day event</td>\n                <td>Movie</td>\n            </tr>\n            <tr>\n                <td>Day event</td>\n                <td>Night</td>\n            </tr>\n\n        </table>\n        </>\n    )\n}\nexport default Rules;","import React, {useState} from 'react';\nimport { Router } from '@reach/router';\nimport { ThemeProvider } from 'styled-components';\nimport Main from './views/Main';\nimport Rules from './views/Rules'\nimport './App.css';\n\n\nfunction App() {\n  const [theme, setTheme] = useState({mode: 'light'})\n  return (\n    <ThemeProvider theme={theme}>\n    <div className=\"App\">\n      <React.Fragment>\n          <Router>\n            <Main path=\"/\"/>\n            <Rules path=\"/Rules\"/>\n          </Router>\n      </React.Fragment>\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}